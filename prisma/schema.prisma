generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @map("_id") @db.ObjectId
  userId        String @unique
  name         String
  email        String   @unique
  Gender       gender
  description  String?
  ProfileImage String?
  Skills       String[]
  Type         String   @default("Interviewee")
  Experience   Experience[]
  Linkedin     String?
  Github       String?
  AvgRating    Int
  createdAt    DateTime @default(now())

  mockInterview MockInterview[]
  timeSlots     TimeSlot[]
}

enum gender {
  male
  female
}
 model Experience{
  id            String   @id  @map("_id") @db.ObjectId
  userId        String   @db.ObjectId
  CompanyName   String?
  Role          String
  Description   String?
  Duration      String?

   User    User         @relation(fields: [userId], references: [id])

 }

 

model MockInterview {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  userId        String   @db.ObjectId
  MockResponse  Json[]
  jobPosition   String
  jobDesc       String
  jobexperience String
  Roles         String[]
  createdAt     DateTime @default(now())

  answers UserAnswer[]
  User    User         @relation(fields: [userId], references: [id])
}

model UserAnswer {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  userId              String
  question            String
  userAnswer          String
  createdAt           DateTime @default(now())
  Intervieweefeedback String
  Intervieweerating   Int
  InterviewerFeedback String?
  InterviewerRating   Int?

  correctAnswer   String
  mockInterviewId String         @db.ObjectId
  mockInterview   MockInterview? @relation(fields: [mockInterviewId], references: [id])
}

model TimeSlot {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  userId    String         @db.ObjectId
  startTime DateTime
  endTime   DateTime
  status    TimeSlotStatus @default(available)
  createdAt DateTime       @default(now())

  user User @relation(fields: [userId], references: [id])
}

enum TimeSlotStatus {
  available
  booked
  cancelled
}
